{"ast":null,"code":"var _jsxFileName = \"/Users/lalitbade/DRMLMS/drm-course-management-system/src/components/VideoPlayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport shaka from \"shaka-player\";\nimport CryptoJS from \"crypto-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPlayer = ({\n  apiEndpoint\n}) => {\n  _s();\n  const videoRef = useRef(null);\n  const playerRef = useRef(null);\n  const watermarkRef = useRef(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [position, setPosition] = useState({\n    top: \"10%\",\n    left: \"10%\"\n  });\n\n  // Function to generate random position within the video\n  const getRandomPosition = () => {\n    const top = Math.random() * 80 + 10; // Random position between 10% to 90% from the top\n    const left = Math.random() * 80 + 10; // Random position between 10% to 90% from the left\n    return {\n      top: `${top}%`,\n      left: `${left}%`\n    };\n  };\n\n  // Function to change watermark position every second\n  const updateWatermarkPosition = () => {\n    const newPosition = getRandomPosition();\n    setPosition(newPosition);\n  };\n\n  // Decrypt video\n  const decryptVideo = useCallback(async (encryptedData, keyBase64, ivBase64) => {\n    try {\n      const encryptedWordArray = CryptoJS.enc.Base64.parse(encryptedData);\n      const keyWordArray = CryptoJS.enc.Base64.parse(keyBase64);\n      const ivWordArray = CryptoJS.enc.Base64.parse(ivBase64);\n      const decrypted = CryptoJS.AES.decrypt({\n        ciphertext: encryptedWordArray\n      }, keyWordArray, {\n        iv: ivWordArray,\n        mode: CryptoJS.mode.CFB,\n        padding: CryptoJS.pad.NoPadding\n      });\n      const decryptedBytes = new Uint8Array(decrypted.sigBytes);\n      const words = decrypted.words;\n      for (let i = 0; i < decrypted.sigBytes; i++) {\n        decryptedBytes[i] = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;\n      }\n      return new Blob([decryptedBytes], {\n        type: \"video/mp4\"\n      });\n    } catch (error) {\n      console.error(\"Decryption Error:\", error);\n      setError('Failed to decrypt video content');\n      throw error;\n    }\n  }, []);\n\n  // Initialize player\n  const initPlayer = useCallback(async (videoElement, videoURL) => {\n    try {\n      await shaka.polyfill.installAll();\n      if (shaka.Player.isBrowserSupported()) {\n        if (playerRef.current) {\n          await playerRef.current.destroy();\n        }\n        const player = new shaka.Player(videoElement);\n        playerRef.current = player;\n        player.addEventListener('error', event => {\n          console.error('Shaka Player Error:', event.detail);\n          setError('Video playback error occurred');\n        });\n        await player.load(videoURL);\n      } else {\n        setError('Browser not supported for video playback');\n      }\n    } catch (error) {\n      console.error('Player initialization error:', error);\n      setError('Failed to initialize video player');\n    }\n  }, []);\n\n  // Fetch and process video\n  useEffect(() => {\n    let mounted = true;\n    let videoURL = null;\n    const fetchAndProcessVideo = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const response = await fetch(apiEndpoint);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        if (!data.encrypted_data || !data.key || !data.iv) {\n          throw new Error(\"Missing required encryption data\");\n        }\n        const decryptedVideo = await decryptVideo(data.encrypted_data, data.key, data.iv);\n        if (mounted) {\n          videoURL = URL.createObjectURL(decryptedVideo);\n          if (videoRef.current) {\n            await initPlayer(videoRef.current, videoURL);\n          }\n          setLoading(false);\n        }\n      } catch (error) {\n        console.error(\"Processing Error:\", error);\n        if (mounted) {\n          setError(error.message || 'Failed to process video');\n          setLoading(false);\n        }\n      }\n    };\n    fetchAndProcessVideo();\n\n    // Update watermark position every second\n    const watermarkInterval = setInterval(updateWatermarkPosition, 1000);\n\n    // Handle fullscreen change\n    const handleFullscreenChange = () => {\n      if (document.fullscreenElement) {\n        // Adjust watermark position for fullscreen\n        setPosition(getRandomPosition());\n      }\n    };\n    document.addEventListener(\"fullscreenchange\", handleFullscreenChange);\n    return () => {\n      mounted = false;\n      if (videoURL) {\n        URL.revokeObjectURL(videoURL);\n      }\n      if (playerRef.current) {\n        playerRef.current.destroy();\n      }\n      clearInterval(watermarkInterval); // Clean up interval\n      document.removeEventListener(\"fullscreenchange\", handleFullscreenChange); // Clean up event listener\n    };\n  }, [apiEndpoint, decryptVideo, initPlayer]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      className: \"video-player\",\n      controls: true,\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: watermarkRef,\n      className: \"watermark\",\n      style: {\n        top: position.top,\n        left: position.left,\n        zIndex: 99999\n      },\n      children: \"lalit - 7075654053\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n\n// Watermark text component\n_s(VideoPlayer, \"oG/tXccJHPBMjD8NGHUIrgatQQI=\");\n_c = VideoPlayer;\nconst WatermarkText = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"text-white text-opacity-40 text-lg font-bold select-none whitespace-nowrap mix-blend-difference\",\n  children: \"Copyright \\xA9\\uFE0F 2024\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 165,\n  columnNumber: 3\n}, this);\n_c2 = WatermarkText;\nexport default VideoPlayer;\nvar _c, _c2;\n$RefreshReg$(_c, \"VideoPlayer\");\n$RefreshReg$(_c2, \"WatermarkText\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","shaka","CryptoJS","jsxDEV","_jsxDEV","VideoPlayer","apiEndpoint","_s","videoRef","playerRef","watermarkRef","loading","setLoading","error","setError","position","setPosition","top","left","getRandomPosition","Math","random","updateWatermarkPosition","newPosition","decryptVideo","encryptedData","keyBase64","ivBase64","encryptedWordArray","enc","Base64","parse","keyWordArray","ivWordArray","decrypted","AES","decrypt","ciphertext","iv","mode","CFB","padding","pad","NoPadding","decryptedBytes","Uint8Array","sigBytes","words","i","Blob","type","console","initPlayer","videoElement","videoURL","polyfill","installAll","Player","isBrowserSupported","current","destroy","player","addEventListener","event","detail","load","mounted","fetchAndProcessVideo","response","fetch","ok","Error","status","data","json","encrypted_data","key","decryptedVideo","URL","createObjectURL","message","watermarkInterval","setInterval","handleFullscreenChange","document","fullscreenElement","revokeObjectURL","clearInterval","removeEventListener","className","children","ref","controls","autoPlay","fileName","_jsxFileName","lineNumber","columnNumber","style","zIndex","_c","WatermarkText","_c2","$RefreshReg$"],"sources":["/Users/lalitbade/DRMLMS/drm-course-management-system/src/components/VideoPlayer.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport shaka from \"shaka-player\";\nimport CryptoJS from \"crypto-js\";\n\nconst VideoPlayer = ({ apiEndpoint }) => {\n  const videoRef = useRef(null);\n  const playerRef = useRef(null);\n  const watermarkRef = useRef(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [position, setPosition] = useState({ top: \"10%\", left: \"10%\" });\n\n  // Function to generate random position within the video\n  const getRandomPosition = () => {\n    const top = Math.random() * 80 + 10;  // Random position between 10% to 90% from the top\n    const left = Math.random() * 80 + 10;  // Random position between 10% to 90% from the left\n    return { top: `${top}%`, left: `${left}%` };\n  };\n\n  // Function to change watermark position every second\n  const updateWatermarkPosition = () => {\n    const newPosition = getRandomPosition();\n    setPosition(newPosition);\n  };\n\n  // Decrypt video\n  const decryptVideo = useCallback(async (encryptedData, keyBase64, ivBase64) => {\n    try {\n      const encryptedWordArray = CryptoJS.enc.Base64.parse(encryptedData);\n      const keyWordArray = CryptoJS.enc.Base64.parse(keyBase64);\n      const ivWordArray = CryptoJS.enc.Base64.parse(ivBase64);\n\n      const decrypted = CryptoJS.AES.decrypt(\n        { ciphertext: encryptedWordArray },\n        keyWordArray,\n        {\n          iv: ivWordArray,\n          mode: CryptoJS.mode.CFB,\n          padding: CryptoJS.pad.NoPadding\n        }\n      );\n\n      const decryptedBytes = new Uint8Array(decrypted.sigBytes);\n      const words = decrypted.words;\n      for (let i = 0; i < decrypted.sigBytes; i++) {\n        decryptedBytes[i] = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n      }\n\n      return new Blob([decryptedBytes], { type: \"video/mp4\" });\n    } catch (error) {\n      console.error(\"Decryption Error:\", error);\n      setError('Failed to decrypt video content');\n      throw error;\n    }\n  }, []);\n\n  // Initialize player\n  const initPlayer = useCallback(async (videoElement, videoURL) => {\n    try {\n      await shaka.polyfill.installAll();\n      if (shaka.Player.isBrowserSupported()) {\n        if (playerRef.current) {\n          await playerRef.current.destroy();\n        }\n\n        const player = new shaka.Player(videoElement);\n        playerRef.current = player;\n\n        player.addEventListener('error', (event) => {\n          console.error('Shaka Player Error:', event.detail);\n          setError('Video playback error occurred');\n        });\n\n        await player.load(videoURL);\n      } else {\n        setError('Browser not supported for video playback');\n      }\n    } catch (error) {\n      console.error('Player initialization error:', error);\n      setError('Failed to initialize video player');\n    }\n  }, []);\n\n  // Fetch and process video\n  useEffect(() => {\n    let mounted = true;\n    let videoURL = null;\n\n    const fetchAndProcessVideo = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        const response = await fetch(apiEndpoint);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        if (!data.encrypted_data || !data.key || !data.iv) {\n          throw new Error(\"Missing required encryption data\");\n        }\n\n        const decryptedVideo = await decryptVideo(data.encrypted_data, data.key, data.iv);\n        if (mounted) {\n          videoURL = URL.createObjectURL(decryptedVideo);\n          if (videoRef.current) {\n            await initPlayer(videoRef.current, videoURL);\n          }\n          setLoading(false);\n        }\n      } catch (error) {\n        console.error(\"Processing Error:\", error);\n        if (mounted) {\n          setError(error.message || 'Failed to process video');\n          setLoading(false);\n        }\n      }\n    };\n\n    fetchAndProcessVideo();\n\n    // Update watermark position every second\n    const watermarkInterval = setInterval(updateWatermarkPosition, 1000);\n\n    // Handle fullscreen change\n    const handleFullscreenChange = () => {\n      if (document.fullscreenElement) {\n        // Adjust watermark position for fullscreen\n        setPosition(getRandomPosition());\n      }\n    };\n    document.addEventListener(\"fullscreenchange\", handleFullscreenChange);\n\n    return () => {\n      mounted = false;\n      if (videoURL) {\n        URL.revokeObjectURL(videoURL);\n      }\n      if (playerRef.current) {\n        playerRef.current.destroy();\n      }\n      clearInterval(watermarkInterval);  // Clean up interval\n      document.removeEventListener(\"fullscreenchange\", handleFullscreenChange);  // Clean up event listener\n    };\n  }, [apiEndpoint, decryptVideo, initPlayer]);\n\n  return (\n    <div className=\"video-section\">\n      <video ref={videoRef} className=\"video-player\" controls autoPlay />\n      {/* Watermark on top of video */}\n      <div\n        ref={watermarkRef}\n        className=\"watermark\"\n        style={{ top: position.top, left: position.left, zIndex: 99999 }}\n      >\n        lalit - 7075654053\n      </div>\n    </div>\n  );\n};\n\n// Watermark text component\nconst WatermarkText = () => (\n  <div className=\"text-white text-opacity-40 text-lg font-bold select-none whitespace-nowrap mix-blend-difference\">\n    Copyright ©️ 2024\n  </div>\n);\n\nexport default VideoPlayer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACvE,OAAOC,KAAK,MAAM,cAAc;AAChC,OAAOC,QAAQ,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAMC,QAAQ,GAAGV,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMW,SAAS,GAAGX,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMY,YAAY,GAAGZ,MAAM,CAAC,IAAI,CAAC;EACjC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC;IAAEkB,GAAG,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAM,CAAC,CAAC;;EAErE;EACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMF,GAAG,GAAGG,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAE;IACtC,MAAMH,IAAI,GAAGE,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAE;IACvC,OAAO;MAAEJ,GAAG,EAAE,GAAGA,GAAG,GAAG;MAAEC,IAAI,EAAE,GAAGA,IAAI;IAAI,CAAC;EAC7C,CAAC;;EAED;EACA,MAAMI,uBAAuB,GAAGA,CAAA,KAAM;IACpC,MAAMC,WAAW,GAAGJ,iBAAiB,CAAC,CAAC;IACvCH,WAAW,CAACO,WAAW,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMC,YAAY,GAAGxB,WAAW,CAAC,OAAOyB,aAAa,EAAEC,SAAS,EAAEC,QAAQ,KAAK;IAC7E,IAAI;MACF,MAAMC,kBAAkB,GAAG1B,QAAQ,CAAC2B,GAAG,CAACC,MAAM,CAACC,KAAK,CAACN,aAAa,CAAC;MACnE,MAAMO,YAAY,GAAG9B,QAAQ,CAAC2B,GAAG,CAACC,MAAM,CAACC,KAAK,CAACL,SAAS,CAAC;MACzD,MAAMO,WAAW,GAAG/B,QAAQ,CAAC2B,GAAG,CAACC,MAAM,CAACC,KAAK,CAACJ,QAAQ,CAAC;MAEvD,MAAMO,SAAS,GAAGhC,QAAQ,CAACiC,GAAG,CAACC,OAAO,CACpC;QAAEC,UAAU,EAAET;MAAmB,CAAC,EAClCI,YAAY,EACZ;QACEM,EAAE,EAAEL,WAAW;QACfM,IAAI,EAAErC,QAAQ,CAACqC,IAAI,CAACC,GAAG;QACvBC,OAAO,EAAEvC,QAAQ,CAACwC,GAAG,CAACC;MACxB,CACF,CAAC;MAED,MAAMC,cAAc,GAAG,IAAIC,UAAU,CAACX,SAAS,CAACY,QAAQ,CAAC;MACzD,MAAMC,KAAK,GAAGb,SAAS,CAACa,KAAK;MAC7B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGd,SAAS,CAACY,QAAQ,EAAEE,CAAC,EAAE,EAAE;QAC3CJ,cAAc,CAACI,CAAC,CAAC,GAAID,KAAK,CAACC,CAAC,KAAK,CAAC,CAAC,KAAM,EAAE,GAAIA,CAAC,GAAG,CAAC,GAAI,CAAE,GAAI,IAAI;MACpE;MAEA,OAAO,IAAIC,IAAI,CAAC,CAACL,cAAc,CAAC,EAAE;QAAEM,IAAI,EAAE;MAAY,CAAC,CAAC;IAC1D,CAAC,CAAC,OAAOrC,KAAK,EAAE;MACdsC,OAAO,CAACtC,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzCC,QAAQ,CAAC,iCAAiC,CAAC;MAC3C,MAAMD,KAAK;IACb;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMuC,UAAU,GAAGpD,WAAW,CAAC,OAAOqD,YAAY,EAAEC,QAAQ,KAAK;IAC/D,IAAI;MACF,MAAMrD,KAAK,CAACsD,QAAQ,CAACC,UAAU,CAAC,CAAC;MACjC,IAAIvD,KAAK,CAACwD,MAAM,CAACC,kBAAkB,CAAC,CAAC,EAAE;QACrC,IAAIjD,SAAS,CAACkD,OAAO,EAAE;UACrB,MAAMlD,SAAS,CAACkD,OAAO,CAACC,OAAO,CAAC,CAAC;QACnC;QAEA,MAAMC,MAAM,GAAG,IAAI5D,KAAK,CAACwD,MAAM,CAACJ,YAAY,CAAC;QAC7C5C,SAAS,CAACkD,OAAO,GAAGE,MAAM;QAE1BA,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAGC,KAAK,IAAK;UAC1CZ,OAAO,CAACtC,KAAK,CAAC,qBAAqB,EAAEkD,KAAK,CAACC,MAAM,CAAC;UAClDlD,QAAQ,CAAC,+BAA+B,CAAC;QAC3C,CAAC,CAAC;QAEF,MAAM+C,MAAM,CAACI,IAAI,CAACX,QAAQ,CAAC;MAC7B,CAAC,MAAM;QACLxC,QAAQ,CAAC,0CAA0C,CAAC;MACtD;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdsC,OAAO,CAACtC,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDC,QAAQ,CAAC,mCAAmC,CAAC;IAC/C;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAjB,SAAS,CAAC,MAAM;IACd,IAAIqE,OAAO,GAAG,IAAI;IAClB,IAAIZ,QAAQ,GAAG,IAAI;IAEnB,MAAMa,oBAAoB,GAAG,MAAAA,CAAA,KAAY;MACvC,IAAI;QACFvD,UAAU,CAAC,IAAI,CAAC;QAChBE,QAAQ,CAAC,IAAI,CAAC;QAEd,MAAMsD,QAAQ,GAAG,MAAMC,KAAK,CAAC/D,WAAW,CAAC;QACzC,IAAI,CAAC8D,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;QAC3D;QAEA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClC,IAAI,CAACD,IAAI,CAACE,cAAc,IAAI,CAACF,IAAI,CAACG,GAAG,IAAI,CAACH,IAAI,CAACnC,EAAE,EAAE;UACjD,MAAM,IAAIiC,KAAK,CAAC,kCAAkC,CAAC;QACrD;QAEA,MAAMM,cAAc,GAAG,MAAMrD,YAAY,CAACiD,IAAI,CAACE,cAAc,EAAEF,IAAI,CAACG,GAAG,EAAEH,IAAI,CAACnC,EAAE,CAAC;QACjF,IAAI4B,OAAO,EAAE;UACXZ,QAAQ,GAAGwB,GAAG,CAACC,eAAe,CAACF,cAAc,CAAC;UAC9C,IAAIrE,QAAQ,CAACmD,OAAO,EAAE;YACpB,MAAMP,UAAU,CAAC5C,QAAQ,CAACmD,OAAO,EAAEL,QAAQ,CAAC;UAC9C;UACA1C,UAAU,CAAC,KAAK,CAAC;QACnB;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdsC,OAAO,CAACtC,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;QACzC,IAAIqD,OAAO,EAAE;UACXpD,QAAQ,CAACD,KAAK,CAACmE,OAAO,IAAI,yBAAyB,CAAC;UACpDpE,UAAU,CAAC,KAAK,CAAC;QACnB;MACF;IACF,CAAC;IAEDuD,oBAAoB,CAAC,CAAC;;IAEtB;IACA,MAAMc,iBAAiB,GAAGC,WAAW,CAAC5D,uBAAuB,EAAE,IAAI,CAAC;;IAEpE;IACA,MAAM6D,sBAAsB,GAAGA,CAAA,KAAM;MACnC,IAAIC,QAAQ,CAACC,iBAAiB,EAAE;QAC9B;QACArE,WAAW,CAACG,iBAAiB,CAAC,CAAC,CAAC;MAClC;IACF,CAAC;IACDiE,QAAQ,CAACtB,gBAAgB,CAAC,kBAAkB,EAAEqB,sBAAsB,CAAC;IAErE,OAAO,MAAM;MACXjB,OAAO,GAAG,KAAK;MACf,IAAIZ,QAAQ,EAAE;QACZwB,GAAG,CAACQ,eAAe,CAAChC,QAAQ,CAAC;MAC/B;MACA,IAAI7C,SAAS,CAACkD,OAAO,EAAE;QACrBlD,SAAS,CAACkD,OAAO,CAACC,OAAO,CAAC,CAAC;MAC7B;MACA2B,aAAa,CAACN,iBAAiB,CAAC,CAAC,CAAE;MACnCG,QAAQ,CAACI,mBAAmB,CAAC,kBAAkB,EAAEL,sBAAsB,CAAC,CAAC,CAAE;IAC7E,CAAC;EACH,CAAC,EAAE,CAAC7E,WAAW,EAAEkB,YAAY,EAAE4B,UAAU,CAAC,CAAC;EAE3C,oBACEhD,OAAA;IAAKqF,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BtF,OAAA;MAAOuF,GAAG,EAAEnF,QAAS;MAACiF,SAAS,EAAC,cAAc;MAACG,QAAQ;MAACC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEnE7F,OAAA;MACEuF,GAAG,EAAEjF,YAAa;MAClB+E,SAAS,EAAC,WAAW;MACrBS,KAAK,EAAE;QAAEjF,GAAG,EAAEF,QAAQ,CAACE,GAAG;QAAEC,IAAI,EAAEH,QAAQ,CAACG,IAAI;QAAEiF,MAAM,EAAE;MAAM,CAAE;MAAAT,QAAA,EAClE;IAED;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;;AAED;AAAA1F,EAAA,CA9JMF,WAAW;AAAA+F,EAAA,GAAX/F,WAAW;AA+JjB,MAAMgG,aAAa,GAAGA,CAAA,kBACpBjG,OAAA;EAAKqF,SAAS,EAAC,iGAAiG;EAAAC,QAAA,EAAC;AAEjH;EAAAI,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAK,CACN;AAACK,GAAA,GAJID,aAAa;AAMnB,eAAehG,WAAW;AAAC,IAAA+F,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}